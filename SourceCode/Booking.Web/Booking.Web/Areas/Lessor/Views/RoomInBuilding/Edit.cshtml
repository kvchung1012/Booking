@model Booking.Model.Model.RoomInBuilding
@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Lessor/Views/Shared/_Layout.cshtml";
    var utilities = ViewBag.utilities as List<Booking.Model.Model.RoomInBuildingUtility>;
    var items = ViewBag.items as List<Booking.Model.Model.RoomInBuildingItem>;
    var images = ViewBag.images as List<Booking.Model.Model.RoomInBuildingImage>;
}
<style>
    html {
        box-sizing: border-box
    }

    .image-item {
        position: relative;
    }

        .image-item button {
            position: absolute;
            top: 0px;
            right: 0px;
        }
    .select2-selection--multiple {
        height: auto !important;
    }
</style>
<div class="form-add">
    <h5>Thêm mới loại phòng cho thuê</h5>
    <form class="form-input">
        <div class="row">
            <div class="col-md-9 row">
                <div class="form-group col-md-6">
                    <label class="col-form-label">Tên loại phòng</label>
                    <div>
                        <input type="hidden" name="Id" id="Id" value="@Model.Id">
                        <input class="form-control validation" type="text" name="Name" value="@Model.Name" placeholder="Nhập tên loại phòng của bạn">
                        <span class="help-block"></span>
                    </div>
                </div>
                <div class="form-group col-md-6">
                    <label class="col-form-label">Diện tích</label>
                    <div>
                        <input class="form-control validation" type="number" name="Acreage" value="@Model.Acreage" placeholder="Diện tích của phòng (m*m)">
                        <span class="help-block"></span>
                    </div>
                </div>
                <div class="form-group col-md-6">
                    <label class="col-form-label">Số lượng người(Tối đa)</label>
                    <div>
                        <input class="form-control validation" type="number" name="MaxPeople" value="@Model.MaxPeople" placeholder="Số lượng người tối đa">
                        <span class="help-block"></span>
                    </div>
                </div>

                <div class="form-group col-md-6">
                    <label class="col-form-label">Giá</label>
                    <div>
                        <input class="form-control validation" type="number" name="Price" value="@Model.Price" placeholder="Giá tiền trên 1 ngày">
                        <span class="help-block"></span>
                    </div>
                </div>

                <div class="form-group col-md-6">
                    <label class="col-form-label">Số lượng phòng</label>
                    <div>
                        <input class="form-control validation" type="number" value="@Model.Stock" name="Stock" placeholder="Số lượng phòng bạn có">
                        <span class="help-block"></span>
                    </div>
                </div>

                <div class="form-group col-md-6">
                    <label class="col-form-label">Sắp xếp</label>
                    <div>
                        <input class="form-control validation" type="number" value="@Model.OrderBy" name="OrderBy" placeholder="Thứ tự hiển thị">
                        <span class="help-block"></span>
                    </div>
                </div>

                <div class="col-md-12 mt-2 mb-2">
                    <h5>Thêm các dịch vụ</h5>
                    <select class="select-service form-control" multiple="multiple">
                            @foreach (var item in ViewBag.utiliti as IEnumerable<Booking.Model.ModelView.UtilitiesModelView>)
                            {
                                <optgroup label="@item.utiliti.Name">
                                    @foreach (var c in item.utilities)
                                    {
                                        if ((ViewBag.utilities as IEnumerable<Booking.Model.Model.RoomInBuildingUtility>).Where(x => x.UtilitiId == c.Id).Count() > 0)
                                        {
                                            <option value="@c.Id" selected>@c.Name</option>
                                        }
                                        else
                                        {
                                            <option value="@c.Id">@c.Name</option>
                                        }
                                    }
                                </optgroup>
                            }
                    </select>
                </div>

                <div class="col-md-6">
                    <h5>Thêm các đồ dùng trong phòng</h5>
                    <select class="items form-control">
                        <option value="0" selected>Mời bạn chọn</option>
                        @foreach (var item in ViewBag.item as IEnumerable<Booking.Model.ModelView.ItemInRoomViewModel>)
                        {
                            <option class="@if (items.Where(x => x.ItemId == item.itemInRoom.Id).Count() > 0) {<text>d-none</text>}" value="@item.itemInRoom.Id">@item.itemInRoom.Name</option>
                        }
                    </select>
                </div>

                <div class="col-md-6">
                    <div class="list-item">
                        @foreach (var item in items)
                        {
                            <div class="item mt-2" data-value="@item.ItemId">
                                <h6>@((ViewBag.item as IEnumerable<Booking.Model.ModelView.ItemInRoomViewModel>).Where(x=>x.itemInRoom.Id == item.ItemId).FirstOrDefault().itemInRoom.Name)</h6>
                                <div class="d-flex">
                                    <input type="number" class="form-control" name="Stock" value="1" min="1" />
                                    <button type="button" class="btn btn-square btn-danger" data-value="@item.ItemId" onclick="RemoveItem(this)"><i class="bi bi-trash"></i></button>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <div class="col-md-12 col-form-label">
                    <div class="form-check form-check-inline mr-1">
                        <input class="form-check-input" @if (Model.Status == true) { <text> checked</text>} id="inline-radio1" type="radio" value="True" name="Status">
                        <label class="form-check-label" for="inline-radio1">Hoạt động</label>
                    </div>
                    <div class="form-check form-check-inline mr-1">
                        <input class="form-check-input" id="inline-radio2" type="radio" value="False" name="Status" @if (Model.Status != true) { <text> checked</text>}>
                        <label class="form-check-label" for="inline-radio2">Khóa</label>
                    </div>
                </div>

                <div class="col-md-12 d-flex justify-content-end mt-3">
                    <button type="button" class="btn btn-square btn-danger">Quay lại</button>
                    <button type="button" class="btn btn-square btn-success ml-2" onclick="Add()">Cập nhật</button>
                </div>
            </div>
            <div class="col-md-3">
                <div class="list-image">
                    <div class="d-flex flex-wrap h-100 mt-2">
                        @foreach (var item in images)
                        {
                            <div class="image-item w-50">
                                <img src="@item.Image" alt="Alternate Text" class="w-100 border show-image" style="object-fit:contain" />
                                <button class="btn-danger" type="button" onclick="DeleteImage(this)"><i class="bi bi-trash"></i></button>
                            </div>
                        }
                    </div>
                    <div class="mt-2">
                        <button type="button" class="btn btn-square btn-success" onclick="ChooseImage()">Thêm ảnh</button>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

@section scripts{
    <script src="~/Content/ckeditor/ckeditor.js"></script>
    <script src="~/Content/Admin/js/AdminCommon.js"></script>
    <script>
        $(document).ready(function () {
            $('.select-service').select2();
            ChooseItem();
        })
        function Add() {
            if (ValidationInput()) {  // kiểm tra dữ liệu đầu vào
                // read data in form
                let formArray = $('form.form-input').serializeArray();
                var object = {};
                jQuery.map(formArray, function (n, i) {
                    object[n.name] = n.value;
                });

                // get image
                let images = [];
                $('.list-image img').each(function (i, e) {
                    let obj = {
                        BuildingForRentId: 0,
                        Image: $(e).attr('src')
                    }
                    images.push(obj);
                })

                // get list utiliti
                let utilities = [];
                let services = $('.select-service').val();
                $(services).each(function (index, item) {
                    let utiliti = {
                        Id: 0,
                        RoomInBuildingId: 0,
                        UtilitiId: item
                    };
                    utilities.push(utiliti);
                })
                let items = [];
                $('.list-item .item').each(function (index, item) {
                    let value = $(this).attr('data-value');
                    let stock = $(this).children('div').children('input').val();
                    let obj = {
                        Id: 0,
                        RoomInBuildingId: 0,
                        ItemId: value,
                        Stock: stock
                    }
                    items.push(obj);
                })
                swal({
                    title: $('#Id').val() == 0 ? "Bạn có chắc chắn muốn thêm" : "Bạn có chắc muốn sửa dữ liệu này?",
                    text: $('#Id').val() == 0 ? "" : "Sau khi sửa thì không thể quay lại!",
                    icon: "warning",
                    buttons: true,
                    dangerMode: true,
                }).then((willDelete) => {
                    if (willDelete) {
                        $.ajax({
                            url: '/Lessor/RoomInBuilding/AddOrUpdate',
                            type: 'post',
                            dataType: 'json',
                            contentType: 'application/json',
                            data: JSON.stringify({
                                obj: object,
                                images: images,
                                utilities: utilities,
                                items: items
                            }),
                            beforeSend: function () {
                            },
                            success: function (res) {
                                if (res.success) {
                                    alert("ok")
                                }
                                else {
                                    if (res.error != null) {
                                        $('.help-block').css('display', 'inline-block');
                                        res.error.map(x => {
                                            $('.form-input input[name=' + x.key + ']').siblings('.help-block').html('');
                                            $('.form-input input[name=' + x.key + ']').siblings('.help-block').append(x.value);
                                        })
                                    }
                                }
                            },
                            error: function (error) {

                            },
                            complete: function () {
                            }
                        })
                    }
                })
            }
        }

        function RemoveItem(el) {
            swal({
                title: "Bạn có chắc chắn muốn xóa không",
                text: "Sau khi sửa thì không thể quay lại!",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            }).then((willDelete) => {
                if (willDelete) {
                    $(el).parent().parent().remove();
                    $('.items option[value="' + $(el).attr('data-value') + '"]').removeClass('d-none');
                }
            })
        }

        function ChooseItem() {
            $('.items').on('change', function () {
                let obj = $(this).find(':selected')
                let value = obj.attr('value');
                if (value > 0) {
                    let part = `<div class="item mt-2" data-value="${value}">
                                                <h6>${$(obj).text()}</h6>
                                                <div class="d-flex">
                                                    <input type="number" class="form-control" name="Stock" value="1" min="1" />
                                                    <button type="button" class="btn btn-square btn-danger" data-value="${value}" onclick="RemoveItem(this)"><i class="bi bi-trash"></i></button>
                                                </div>
                                            </div>`;
                    $('.list-item').append(part);
                    $(obj).addClass('d-none');
                }
            })


        }
    </script>
}